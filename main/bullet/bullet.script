go.property("damage", 1)
go.property("speed", 1000)

function init(self)
	self.lifetime = 2000/self.speed
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function final(self)
	particlefx.play("#destroy")
end

function update(self, dt)
	self.lifetime = self.lifetime-dt
	if self.lifetime<0 then
		go.delete()
	end
	local pos = go.get_position()
	local rot = go.get_rotation()
	local movement = vmath.vector3(0,dt*self.speed,0)
	go.set_position(pos+vmath.rotate(rot, movement))
end

function fixed_update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("trigger_response") then
		if message.enter then
			
			go.delete()
		end
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
